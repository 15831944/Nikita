using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using  @namespace@.DAL.ServiceReference1;
namespace @namespace@.DAL
{
    /// <summary>@tabname@表数据访问类
    /// 作者:
    /// 创建时间:@createdate@
    /// </summary>
    public partial class @classname@DAL
    {
	    ServiceReference1.MsSqlDataAccessServiceClient h = new MsSqlDataAccessServiceClient();
        public @classname@DAL()
        { }
        /// <summary>增加一条数据
        /// 
        /// </summary>
        public int Add(@namespace@.Model.@classname@ model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into @tabname@(");
            strSql.Append("@insertfields@ )");
            strSql.Append(" values (");
            strSql.Append("@insertvalues@ )");
            strSql.Append(";select @@IDENTITY");
            
            h.CreateCommand(strSql.ToString());
@insertparam@
            int result;
            string obj = h.ExecuteScalar();
            if (!int.TryParse(obj, out result))
            {
                return 0;
            }
            return result;
        }

        /// <summary>更新一条数据
        /// 
        /// </summary>
        public bool Update(@namespace@.Model.@classname@ model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update @tabname@ set ");
            strSql.Append("@updatefields@ ");
            strSql.Append(" where @pkey@=@@pkey@ ");
            
            h.CreateCommand(strSql.ToString());
@updateparam@
            return h.ExecuteNonQuery();
        }

        /// <summary>删除一条数据
        /// 
        /// </summary>
        public bool Delete(int @pkey@)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from @tabname@ ");
            strSql.Append(" where @pkey@=@@pkey@ ");
            
            h.CreateCommand(strSql.ToString());
            h.AddParameter("@@pkey@", @pkey@);
            return h.ExecuteNonQuery();
        }

        /// <summary>根据条件删除数据
        /// 
        /// </summary>
        public bool DeleteByCond(string cond)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from @tabname@ ");
            if (!string.IsNullOrEmpty(cond))
            {
                strSql.Append(" where " + cond);
            }
            
            h.CreateCommand(strSql.ToString());
            return h.ExecuteNonQuery();
        }

      

        /// <summary>获得数据列表
        /// 
        /// </summary>
        public DataSet GetList(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select * ");
            strSql.Append(" FROM @tabname@ ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            
            h.CreateCommand(strSql.ToString());
            DataTable dt = h.ExecuteQuery();
            DataSet ds = new DataSet();
            ds.Tables.Add(dt);
            return ds;
        }

		
        /// <summary>获得数据列表
        /// 
        /// </summary>
        public DataSet GetList(string strWhere, string Filds)
        {
            StringBuilder strSql = new StringBuilder(); 
			  strSql.Append("select " + Filds + " ");
            strSql.Append(" FROM @tabname@ ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            
            h.CreateCommand(strSql.ToString());
            DataTable dt = h.ExecuteQuery();
            DataSet ds = new DataSet();
            ds.Tables.Add(dt);
            return ds;
        }


        /// <summary>分页获取数据列表
        /// 
        /// </summary>
        public DataSet GetList(string fileds, string order, string ordertype, int PageSize, int PageIndex, string strWhere)
        {
            
            h.CreateStoredCommand("[proc_SplitPage]");
            h.AddParameter("@tblName", "@tabname@");
            h.AddParameter("@strFields", fileds);
            h.AddParameter("@strOrder", order);
            h.AddParameter("@strOrderType", ordertype);
            h.AddParameter("@PageSize", PageSize);
            h.AddParameter("@PageIndex", PageIndex);
            h.AddParameter("@strWhere", strWhere);
            DataTable dt = h.ExecuteQuery();
            DataSet ds = new DataSet();
            ds.Tables.Add(dt);
            return ds;
        }
  

        /// <summary>计算记录数
        /// 
        /// </summary>
        /// <param name="p"></param>
        /// <returns></returns>
        public int CalcCount(string cond)
        {
            string sql = "select count(1) from @tabname@";
            if (!string.IsNullOrEmpty(cond))
            {
                sql += " where " + cond;
            }
            
            h.CreateCommand(sql);
            return int.Parse(h.ExecuteScalar());
        }
    }
}

