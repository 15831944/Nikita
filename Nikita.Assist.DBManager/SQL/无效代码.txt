     /// <summary>反射出子窗体实例(不带参数)
        /// 
        /// </summary>
        /// <param name="parentForm"></param>
        /// <param name="name"></param>
        /// <returns></returns>
        public object GetForm(string nameSpace, string name)
        {
            string fullname = nameSpace + "." + name;
            object f = null;
            if (nameSpace == this.GetType().Namespace)
            {
                f = Activator.CreateInstance(Type.GetType(fullname));
            }
            else
            {
                f = System.Reflection.Assembly.LoadFrom(Application.StartupPath + "\\" + nameSpace + ".dll").CreateInstance(fullname, false);
            }

            return f;
        }


        /// <summary>加载菜单，仅支持两级结构
        /// 
        /// </summary>
        /// <param name="menuStrip"></param>
        /// <param name="dtMenuAll"></param>
        private void InitMenu(MenuStrip menuStrip, DataTable dtMenuAll)
        {
            DataRow[] drs = dtMenuAll.Select("ParentId=0");

            DataRow[] drsChild = dtMenuAll.Select("ParentId<>0");

            if (drs.Length > 0)
            {
                for (int i = 0; i < drs.Count(); i++)
                {
                    ToolStripMenuItem itemParent = new ToolStripMenuItem
                    {
                        Text = drs[i]["MenuName"].ToString(),
                        Name = "MenuItem" + drs[i]["id"]
                    };
                    menuStrip.Items.Add(itemParent);
                    string strParentId = drs[i]["id"].ToString().Trim();
                    for (int j = 0; j < drsChild.Count(); j++)
                    {
                        if (drsChild[j]["ParentId"].ToString().Trim() == strParentId)
                        {
                            ToolStripMenuItem itemChild = new ToolStripMenuItem
                            {

                                Text = drsChild[j]["MenuName"].ToString(),
                                Name = drsChild[j]["MenuClass"].ToString(),
                                Tag = drsChild[j]["Fileld1"].ToString()
                            };
                            itemChild.Click += item_Click;
                            itemParent.DropDownItems.Add(itemChild);
                        }

                    }
                }
            }

        }

        /// <summary>单击事件
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void item_Click(object sender, EventArgs e)
        {
            ToolStripMenuItem item = sender as ToolStripMenuItem;
            if (item != null)
            {
                object frm = GetForm(item.Tag.ToString(), item.Name);
                if (frm is DockContent)
                {
                    DockContent itemDockContent = frm as DockContent;
                    itemDockContent.Text = item.Text;
                    IDockContent iDockContent = FindDocument(itemDockContent.Text);
                    if (iDockContent == null)
                    {
                        itemDockContent.Show(dockPanel);
                    }
                    else
                    {
                        itemDockContent.Activate();
                    }
                }
                else
                {
                    Form frmother = frm as Form;
                    frmother.ShowDialog();
                }

            }
        }

        private void test2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            //DockContent itemDockContent = new Form1() as DockContent;
            //IDockContent iDockContent = FindDocument(itemDockContent.Text); 
            //if (iDockContent == null)
            //{
            //    itemDockContent.Show(dockPanel);
            //}
            //else
            //{  
            //    dockPanel.Documents.Where(t => t.DockHandler.TabText == itemDockContent.Text).FirstOrDefault().DockHandler.Show(); 
            //}
        }

        private void test3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            //DockContent itemDockContent = new Form2() as DockContent;
            //IDockContent iDockContent = FindDocument(itemDockContent.Text);
            //if (iDockContent == null)
            //{
            //    itemDockContent.Show(dockPanel);
            //}
            //else
            //{  
            //     dockPanel.Documents.Where(t => t.DockHandler.TabText == itemDockContent.Text).FirstOrDefault().DockHandler.Show();
            //}
        }