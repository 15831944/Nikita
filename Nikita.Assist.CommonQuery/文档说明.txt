Nikita.Assist.CommonQuery 尽量实现一个通用的查询组件

http://www.albahari.com/nutshell/predicatebuilder.aspx
http://www.cnblogs.com/yubaolee/p/DynamicLinq.html#undefined
http://weblogs.asp.net/scottgu/dynamic-linq-part-1-using-the-linq-dynamic-query-library
http://blog.csdn.net/guoyichao/article/category/854360
http://www.cnblogs.com/worksguo/archive/2008/05/22/1151791.html
http://www.cnblogs.com/whitewolf/archive/2010/08/03/1790954.html dynamic 扩展like
http://www.cnblogs.com/killuakun/archive/2008/08/03/1259389.html

动态构建C# Lambda表达式例子3


var ints =    
new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };   
// var r =    
ints.Where(i => (i > 5 && i <= 7) || (i == 3));    
// 要实现的表达式   
  
// 创建参数 i   
var parameter =    
Expression.Parameter(typeof(int), "i");   
  
// 创建表达式 i > 5   
var con1 =    
Expression.Constant(5);   
var bin1 =    
Expression.GreaterThan(parameter, con1);   
  
// 创建表达式 i < 7   
var con2 =    
Expression.Constant(7);   
var bin2 =    
Expression.LessThanOrEqual(parameter, con2);   
  
// 创建表达式 i == 3   
var con3 =    
Expression.Constant(3);   
var bin3 =    
Expression.Equal(parameter, con3);   
  
// 组合 i > 5 && i <= 7   
var body =    
Expression.And(bin1, bin2);   
  
// 组合 ( i > 5 && i <= 7) OR (i == 3)   
body = Expression.Or(body, bin3);   
  
var lambda =    
Expression.Lambda<Func<int, bool>>   
(body, parameter);   
var _r = ints.Where(lambda.Compile());  

我们继续看几个常见的例子。

动态构建C# Lambda表达式例子4


var ints =    
new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };   
//var r = ints.Select(i => i % 2 == 0 ? i : 0);    
// 要实现的表达式   
  
// 创建参数 i   
var parameter =    
Expression.Parameter(typeof(int), "i");   
  
// 创建表达式 i % 2   
var con1 =    
Expression.Constant(2);   
var bin1 =    
Expression.Modulo(parameter, con1);   
  
// 创建表达式 (i % 2) == 0   
var con2 =    
Expression.Constant(0);   
var bin2 =    
Expression.Equal(bin1, con2);   
  
// 创建表达式 IIF(((i % 2) = 0), i, 0)   
var bin3 =    
Expression.Condition   
(bin2, parameter, Expression.Constant(0));   
  
var lambda =    
Expression.Lambda<Func<int, int>>(bin3, parameter);   
var _r = ints.Select(lambda.Compile());  

动态构建C# Lambda表达式例子5


var ints =    
new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };   
// Array.ForEach<int>(ints, i => Console.WriteLine(i));   
 // 要实现的表达式   
  
// 创建参数i   
var parameter =    
Expression.Parameter(typeof(int), "i");   
  
// 获取 Console.WriteLine MethodInfo   
MethodInfo method =    
typeof(Console).GetMethod(   
"WriteLine", new Type[] { typeof(int) });   
  
// 创建表达式    
var call = Expression.Call(method, parameter);   
  
var lambda =    
Expression.Lambda<Action<int>>(call, parameter);   
Array.ForEach<int>(   
ints, lambda.Compile());   
 
